//our js list


function list(){
    this.head = this.tail = null;
}

//we do not check is the item in the list.
list.prototype.remove = function(item){
    
    if (item._next_item) {
        item._next_item._prev_item = item._prev_item;
    }
    
    if (item._prev_item) {
        item._prev_item._next_item = item._next_item;
    }
    
    
    //check is head   
    if (this.head === item) {
        this.head = item._next_item;
    }
    //check is tail   
    if (this.tail === item) {
        this.tail = item._prev_item;
    }
    
    
    //at here we define property
    if (!item.hasOwnProperty("_prev_item")) {
        
        Object.defineProperty(item,"_prev_item",{
            value : null,
            writable : true,
            enumerable : false,
            configurable : false
        });
    }
    else
    {
        item._prev_item = null;
    }
    
    if (!item.hasOwnProperty("_next_item")) {
        
        Object.defineProperty(item,"_next_item",{
            value : null,
            writable : true,
            enumerable : false,
            configurable : false
        });
    }    
    else
    {
        item._next_item = null;
    }
};

list.prototype.push_back = function(item){
    
    //remove first
    this.remove(item);
    
    if (this.tail === null) {
        this.head = this.tail = item;
    }
    else
    {
        this.tail._next_item = item;
        item._prev_item = this.tail;
        
        this.tail = item;        
    }
};

list.prototype.push_front = function(item){
    
    //remove first
    this.remove(item);

    if (this.head === null) {
        this.head = this.tail = item;
    }
    else
    {
        this.head._prev_item = item;
        item._next_item = this.head;
        
        this.head = item;    
    }
};

list.prototype.front = function(){
    return this.head;
};


list.prototype.next = function(item){
    return item._next_item;
};


list.prototype.empty = function(){
    return this.head === null;
};


module.exports = list;

